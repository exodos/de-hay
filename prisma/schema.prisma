// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(uuid())
  firstName          String   @map("first_name")
  middleName         String   @map("middle_name")
  lastName           String   @map("last_name")
  email              String   @unique @db.VarChar(250)
  password           String
  role               Role     @default(USER)
  mobileNumber       String   @unique @map("mobile_number")
  adminResetPassword Boolean  @default(true) @map("admin_reset_password")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  @@map("user")
}

model BusinessType {
  id               Int               @id @default(autoincrement())
  businessTypeName String            @unique @map("business_type_name")
  productCategory  ProductCategory[]
  createdAt        DateTime          @default(now()) @map("created_at")
  updatedAt        DateTime          @updatedAt @map("updated_at")

  @@map("business_type")
}

model ProductCategory {
  id                  Int              @id @default(autoincrement())
  productCategoryName String?          @map("product_category_name")
  businessType        BusinessType?    @relation(fields: [businessTypeId], references: [id])
  businessTypeId      Int?             @map("business_type_id")
  productLine         ProductLine[]
  productSubLine      ProductSubLine[]
  createdAt           DateTime         @default(now()) @map("created_at")
  updatedAt           DateTime         @updatedAt @map("updated_at")

  @@map("product_category")
}

model ProductLine {
  id                Int              @id @default(autoincrement())
  productLineName   String?          @map("product_line_name")
  filterHeader      String[]         @map("filter_header")
  productCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id])
  productCategoryId Int?             @map("product_category_id")
  productSubLine    ProductSubLine[]
  createdAt         DateTime         @default(now()) @map("created_at")
  updatedAt         DateTime         @updatedAt @map("updated_at")

  @@map("product_line")
}

model ProductSubLine {
  id                 Int              @id @default(autoincrement())
  productName        String?
  productDescription String?
  imageUrl           String?
  productImages      String[]
  filterValue        Json?            @map("filter_value")
  productCategory    ProductCategory? @relation(fields: [productCategoryId], references: [id])
  productCategoryId  Int?             @map("product_category_id")
  productLine        ProductLine?     @relation(fields: [productLineId], references: [id])
  productLineId      Int?             @map("product_line_id")
  createdAt          DateTime         @default(now()) @map("created_at")
  updatedAt          DateTime         @updatedAt @map("updated_at")

  @@map("product_sub_line")
}

enum Role {
  SUPERADMIN
  USER
  ADMIN
}
